version: '3.8'

services:
  auth-service:
    build: ./auth-service/.
    container_name: auth-service
    restart: always
    env_file:
      - ./auth-service/.env
    depends_on:
      - db
    ports:
      - "8000:80"

  db:
    image: postgres:latest
    container_name: postgres-multi-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_MULTIPLE_DATABASES: auth,account,transaction
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # порт для общения приложений с RabbitMQ
      - "15672:15672" # порт для доступа к панели управления
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  account-service:
    build: ./account-service
    container_name: account-service
    restart: always
    env_file:
      - ./account-service/.env
    depends_on:
      - db
    ports:
      - "8001:80"

  transaction-service:
    build: ./transaction-service
    container_name: transaction-service
    restart: always
    env_file:
      - ./transaction-service/.env
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8002:80"
    volumes:
      - ./transaction-service/logs:/app/logs
  
  notification-service:
    build: ./notification-service
    container_name: notification-service
    restart: always
    env_file:
      - ./notification-service/.env
    depends_on:
      - rabbitmq
    ports:
      - "8003:80"

  redis:
    image: redis:6-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    
volumes:
  postgres_data:
